apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: longhorn-release
  namespace: longhorn
spec:
  releaseName: longhorn
  chart:
    spec:
      chart: longhorn
      sourceRef:
        kind: HelmRepository
        name: longhorn-repo
        namespace: longhorn
      version: "1.10.0"
  interval: 1h0m0s
  values:
    # registry-proxy block-start
    global:
      cattle:
        systemDefaultRegistry: cr.nathanv.app/docker.io
    # registry-proxy block-end
    persistence:
      defaultClassReplicaCount: 3
      # tries to keep a replica on the node the volume is attached to
      defaultDataLocality: best-effort
      # prevents data from being deleted when pvc is deleted
      reclaimPolicy: Retain
    defaultSettings:
      # enable auto balancing of replicas across nodes
      replicaAutoBalance: best-effort
      # allow manually attached volumes to be detached. Important for rebooting.
      detachManuallyAttachedVolumesWhenCordoned: true
      # percentage of disks reserved for system usage
      # defaults to 30% which is pretty high
      storageReservedPercentageForDefaultDisk: "15"
      # let longhorn automatically upgrade engines
      concurrentAutomaticEngineUpgradePerNodeLimit: 1
    defaultBackupStore:
      backupTarget: s3://nathanv-private@auto/longhorn
      backupTargetCredentialSecret: longhorn-env
      # https://www.reddit.com/r/rancher/comments/yu5jqa/comment/iw85rvu/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
      # https://github.com/longhorn/longhorn/issues/1547
      # prevents longhorn from racking up a big cloud bill
      # one month saw 7980086 listobject calls and 5404852 headobject calls
      # resulted in a $30 bill
      pollInterval: 0
    # just limit the 1-off components to the apps nodes
    # longhorn manager needs to run on all nodes
    longhornUI:
      nodeSelector:
        role: apps
    longhornDriver:
      nodeSelector:
        role: apps
    metrics:
      serviceMonitor:
        enabled: true
