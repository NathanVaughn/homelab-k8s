apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: alloy-release
  namespace: alloy
spec:
  releaseName: alloy
  chart:
    spec:
      chart: alloy
      sourceRef:
        kind: HelmRepository
        name: alloy-repo
        namespace: alloy
      version: "1.3.1"
  interval: 1h0m0s
  values:
    # registry-proxy block-start
    image:
      registry: cr.nathanv.app/docker.io
    configReloader:
      image:
        registry: cr.nathanv.app/quay.io
    # registry-proxy block-end
    alloy:
      mounts:
        varlog: true
        dockercontainers: true
      securityContext:
        privileged: true
        runAsUser: 0
      configMap:
        # https://grafana.com/docs/alloy/latest/collect/logs-in-kubernetes/
        content: |
          discovery.kubernetes "pod" {
            role = "pod"
          }

          // discovery.relabel rewrites the label set of the input targets by applying one or more relabeling rules.
          // If no rules are defined, then the input targets are exported as-is.
          discovery.relabel "pod_logs" {
            targets = discovery.kubernetes.pod.targets

            // Label creation - "namespace" field from "__meta_kubernetes_namespace"
            rule {
              source_labels = ["__meta_kubernetes_namespace"]
              action = "replace"
              target_label = "namespace"
            }

            // Label creation - "pod" field from "__meta_kubernetes_pod_name"
            rule {
              source_labels = ["__meta_kubernetes_pod_name"]
              action = "replace"
              target_label = "pod"
            }

            // Label creation - "container" field from "__meta_kubernetes_pod_container_name"
            rule {
              source_labels = ["__meta_kubernetes_pod_container_name"]
              action = "replace"
              target_label = "container"
            }

            // Label creation -  "app" field from "__meta_kubernetes_pod_label_app_kubernetes_io_name"
            rule {
              source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
              action = "replace"
              target_label = "app"
            }

            // Label creation -  "job" field from "__meta_kubernetes_namespace" and "__meta_kubernetes_pod_container_name"
            // Concatenate values __meta_kubernetes_namespace/__meta_kubernetes_pod_container_name
            rule {
              source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
              action = "replace"
              target_label = "job"
              separator = "/"
              replacement = "$1"
            }

            // Label creation - "container" field from "__meta_kubernetes_pod_uid" and "__meta_kubernetes_pod_container_name"
            // Concatenate values __meta_kubernetes_pod_uid/__meta_kubernetes_pod_container_name.log
            rule {
              source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
              action = "replace"
              target_label = "__path__"
              separator = "/"
              replacement = "/var/log/pods/*$1/*.log"
            }

            // Label creation -  "container_runtime" field from "__meta_kubernetes_pod_container_id"
            rule {
              source_labels = ["__meta_kubernetes_pod_container_id"]
              action = "replace"
              target_label = "container_runtime"
              regex = "^(\\S+):\\/\\/.+$"
              replacement = "$1"
            }
          }

          loki.source.kubernetes "pod_Plogs" {
            targets    = discovery.relabel.pod_logs.output
            forward_to = [loki.write.loki.receiver]
          }

          loki.write "loki" {
              endpoint {
                  url = "http://loki.loki.svc.cluster.local:3100/loki/api/v1/push"
              }
          }
    serviceMonitor:
      enabled: true
